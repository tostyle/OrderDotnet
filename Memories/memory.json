{"type":"entity","name":"DatabaseMigration Project","entityType":"dotnet_project","observations":["Console application for running database migrations","Uses Generic Host pattern with Microsoft.Extensions.Hosting","References Infrastructure project for database access","Implements AddDatabase extension from Infrastructure","Configured with appsettings.json for connection strings","Uses OrderDbContext for Entity Framework migrations","Includes proper logging and error handling"]}
{"type":"entity","name":"Infrastructure Extensions","entityType":"service_extensions","observations":["Contains InfrastructureServiceExtensions class","Provides AddDatabase method for database context registration","Provides AddInfrastructure method for full infrastructure setup","Uses PostgreSQL with Npgsql provider","Default connection string targets localhost:5051","Includes repository registrations and Temporal client setup"]}
{"type":"entity","name":"InitialOrderUseCase","entityType":"UseCase","observations":["Created in Application/UseCases directory","Implements initial order creation use case pattern","Depends on OrderService to execute business logic","Has ExecuteAsync method that takes InitialOrderRequest and returns InitialOrderResponse","Registered as scoped service in ApplicationServiceExtensions"]}
{"type":"entity","name":"UseCases Architecture Pattern","entityType":"Architecture","observations":["Added UseCases directory to Application layer","Implements Clean Architecture use case pattern","Separates application logic from domain services","Use cases orchestrate domain services and repositories"]}
{"type":"entity","entityType":"Workflow","name":"OrderProcessingWorkflow","observations":["Implemented in Workflow/Workflows/OrderProcessingWorkflow.cs","Main Temporal workflow that receives orderId as input","Orchestrates 7 sequential activities for order processing","Uses Temporal.io framework with proper attributes","Returns string result indicating success or failure","All activity calls include 5-minute timeout","Marked as TODO - placeholder implementation"]}
{"type":"entity","entityType":"Activities","name":"OrderActivities","observations":["Implemented in Workflow/Activities/OrderActivities.cs","Contains 7 Temporal activities marked with [Activity] attribute","All activities are TODO placeholders with minimal implementation","Activities: StartOrderWorkflow, ReserveStock, BurnLoyaltyTransaction, EarnLoyaltyTransaction, ProcessPayment, CompletedCart, GetOrderDetail","Each activity logs TODO message and returns placeholder result","Uses proper Temporal.io activity patterns"]}
{"type":"relation","from":"DatabaseMigration Project","to":"Infrastructure Extensions","relationType":"references"}
{"type":"relation","from":"DatabaseMigration Project","to":"Infrastructure Extensions","relationType":"uses AddDatabase method"}
{"type":"relation","from":"InitialOrderUseCase","to":"OrderService","relationType":"depends on"}
{"type":"relation","from":"OrdersController","to":"InitialOrderUseCase","relationType":"uses"}
{"type":"relation","from":"ApplicationServiceExtensions","to":"InitialOrderUseCase","relationType":"registers"}
{"type":"relation","from":"OrderProcessingWorkflow","relationType":"orchestrates","to":"OrderActivities"}
{"type":"relation","from":"OrderProcessingWorkflow","relationType":"receives","to":"orderId"}
{"type":"relation","from":"OrderActivities","relationType":"implements","to":"StartOrderWorkflow"}
{"type":"relation","from":"OrderActivities","relationType":"implements","to":"ReserveStock"}
{"type":"relation","from":"OrderActivities","relationType":"implements","to":"BurnLoyaltyTransaction"}
{"type":"relation","from":"OrderActivities","relationType":"implements","to":"EarnLoyaltyTransaction"}
{"type":"relation","from":"OrderActivities","relationType":"implements","to":"ProcessPayment"}
{"type":"relation","from":"OrderActivities","relationType":"implements","to":"CompletedCart"}
{"type":"relation","from":"OrderActivities","relationType":"implements","to":"GetOrderDetail"}