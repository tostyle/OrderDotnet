@Api_HostAddress = http://localhost:5208

### 1. Create Initial Order with Order Items (5th Iteration) - This will start the OrderProcessingWorkflow
# @name createOrder
POST {{Api_HostAddress}}/api/orders
Content-Type: application/json

{
  "referenceId": "order-ref-040",
  "orderItems": [
    {
      "productId": "550e8400-e29b-41d4-a716-446655440001",
      "quantity": 2,
      "netAmount": 25.99,
      "grossAmount": 28.59,
      "currency": "THB"
    },
    {
      "productId": "550e8400-e29b-41d4-a716-446655440002", 
      "quantity": 1,
      "netAmount": 50.00,
      "grossAmount": 55.00,
      "currency": "THB"
    }
  ],
  "paymentMethod": "CreditCard"
}

### 2. Payment for Order
# @name processPayment
@createOrderId = {{createOrder.response.body.orderId}}
@createOrderPaymentId = {{createOrder.response.body.paymentId}}
POST {{Api_HostAddress}}/api/orders/{{createOrderId}}/payment
Content-Type: application/json

{
  "paymentId": "{{createOrderPaymentId}}",
  "transactionReference": "TXN-{{createOrderId}}-{{createOrderPaymentId}}"
}


### Test 2: Change cancelled order status to Pending (Valid Test)
# @name changeOrderToPending
PUT {{Api_HostAddress}}/api/orders/{{createOrderId}}/status/pending
Content-Type: application/json

{
  "reason": "Customer requested status reset",
  "initiatedBy": "admin@example.com"
}

### Test 3: Try to change non-cancelled order to Pending (should return 400/404)
PUT {{Api_HostAddress}}/api/orders/{{createOrderId}}/status/cancelled
Content-Type: application/json

{
  "reason": "Testing business rule violation - this should fail 22"
}


### Test 5: Change status to Pending for non-existent order (should return 404)
POST {{Api_HostAddress}}/api/orders/00000000-0000-0000-0000-000000000000/status/pending
Content-Type: application/json

{
  "reason": "Testing non-existent order"
}
